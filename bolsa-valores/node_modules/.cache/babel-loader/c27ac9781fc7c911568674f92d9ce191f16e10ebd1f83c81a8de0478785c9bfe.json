{"ast":null,"code":"import jsPDF from \"jspdf\";\nimport \"jspdf-autotable\";\nconst generatePortfolioReport = (acciones, transacciones) => {\n  const doc = new jsPDF();\n\n  // Título del reporte\n  doc.setFontSize(16);\n  doc.text(\"Reporte de Portafolio de Inversiones\", 105, 20, {\n    align: \"center\"\n  });\n\n  // Fecha del reporte\n  const date = new Date();\n  doc.setFontSize(10);\n  doc.text(`Fecha: ${date.toLocaleDateString()} ${date.toLocaleTimeString()}`, 10, 30);\n\n  // Primera tabla: Cartera de Acciones\n  doc.setFontSize(14);\n  doc.text(\"Cartera de Acciones\", 10, 40);\n  const carteraHeaders = [\"Nombre de Acción\", \"Cantidad\", \"Valor USD\", \"Precio Actual\", \"Ganancia/Pérdida\"];\n  const carteraRows = acciones.map(accion => {\n    const nombre = accion.nombre || \"Desconocido\";\n    const cantidad = Number(accion.numeroAcciones) || 0;\n    const valorUSD = Number(accion.valorUSD) || 0;\n    const precioActual = Number(accion.valor) || 0;\n    const gananciaPerdida = precioActual * cantidad - valorUSD;\n    return [nombre, cantidad, `$${valorUSD.toFixed(2)}`, `$${precioActual.toFixed(2)}`, `$${gananciaPerdida.toFixed(2)}`];\n  });\n  doc.autoTable({\n    head: [carteraHeaders],\n    body: carteraRows,\n    startY: 50\n  });\n\n  // Segunda tabla: Registro de Transacciones\n  const nextTableY = doc.previousAutoTable.finalY + 10;\n  doc.setFontSize(14);\n  doc.text(\"Registro de Transacciones\", 10, nextTableY);\n  const transaccionesHeaders = [\"Fecha de Compra\", \"Nombre de Acción\", \"Precio Compra\", \"Cantidad Comprada\", \"USD Compra\"];\n  const transaccionesRows = transacciones.map(transaccion => [transaccion.fechaCompra || \"Fecha desconocida\", transaccion.nombre || \"Desconocido\", `$${(Number(transaccion.precioCompra) || 0).toFixed(2)}`, Number(transaccion.cantidadComprada) || 0, `$${(Number(transaccion.usdCompra) || 0).toFixed(2)}`]);\n  doc.autoTable({\n    head: [transaccionesHeaders],\n    body: transaccionesRows,\n    startY: nextTableY + 10\n  });\n\n  // Guardar el PDF\n  doc.save(\"reporte_portafolio_completo.pdf\");\n};\nexport default generatePortfolioReport;","map":{"version":3,"names":["jsPDF","generatePortfolioReport","acciones","transacciones","doc","setFontSize","text","align","date","Date","toLocaleDateString","toLocaleTimeString","carteraHeaders","carteraRows","map","accion","nombre","cantidad","Number","numeroAcciones","valorUSD","precioActual","valor","gananciaPerdida","toFixed","autoTable","head","body","startY","nextTableY","previousAutoTable","finalY","transaccionesHeaders","transaccionesRows","transaccion","fechaCompra","precioCompra","cantidadComprada","usdCompra","save"],"sources":["C:/Users/marlo/Documents/GitHub/Proyecto-Construccion/bolsa-valores/src/components/generatePortfolioReport.js"],"sourcesContent":["import jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\n\r\nconst generatePortfolioReport = (acciones, transacciones) => {\r\n  const doc = new jsPDF();\r\n\r\n  // Título del reporte\r\n  doc.setFontSize(16);\r\n  doc.text(\"Reporte de Portafolio de Inversiones\", 105, 20, { align: \"center\" });\r\n\r\n  // Fecha del reporte\r\n  const date = new Date();\r\n  doc.setFontSize(10);\r\n  doc.text(`Fecha: ${date.toLocaleDateString()} ${date.toLocaleTimeString()}`, 10, 30);\r\n\r\n  // Primera tabla: Cartera de Acciones\r\n  doc.setFontSize(14);\r\n  doc.text(\"Cartera de Acciones\", 10, 40);\r\n\r\n  const carteraHeaders = [\r\n    \"Nombre de Acción\",\r\n    \"Cantidad\",\r\n    \"Valor USD\",\r\n    \"Precio Actual\",\r\n    \"Ganancia/Pérdida\",\r\n  ];\r\n\r\n  const carteraRows = acciones.map((accion) => {\r\n    const nombre = accion.nombre || \"Desconocido\";\r\n    const cantidad = Number(accion.numeroAcciones) || 0;\r\n    const valorUSD = Number(accion.valorUSD) || 0;\r\n    const precioActual = Number(accion.valor) || 0;\r\n    const gananciaPerdida = (precioActual * cantidad) - valorUSD;\r\n\r\n    return [\r\n      nombre,\r\n      cantidad,\r\n      `$${valorUSD.toFixed(2)}`,\r\n      `$${precioActual.toFixed(2)}`,\r\n      `$${gananciaPerdida.toFixed(2)}`,\r\n    ];\r\n  });\r\n\r\n  doc.autoTable({\r\n    head: [carteraHeaders],\r\n    body: carteraRows,\r\n    startY: 50,\r\n  });\r\n\r\n  // Segunda tabla: Registro de Transacciones\r\n  const nextTableY = doc.previousAutoTable.finalY + 10;\r\n  doc.setFontSize(14);\r\n  doc.text(\"Registro de Transacciones\", 10, nextTableY);\r\n\r\n  const transaccionesHeaders = [\r\n    \"Fecha de Compra\",\r\n    \"Nombre de Acción\",\r\n    \"Precio Compra\",\r\n    \"Cantidad Comprada\",\r\n    \"USD Compra\",\r\n  ];\r\n\r\n  const transaccionesRows = transacciones.map((transaccion) => [\r\n    transaccion.fechaCompra || \"Fecha desconocida\",\r\n    transaccion.nombre || \"Desconocido\",\r\n    `$${(Number(transaccion.precioCompra) || 0).toFixed(2)}`,\r\n    Number(transaccion.cantidadComprada) || 0,\r\n    `$${(Number(transaccion.usdCompra) || 0).toFixed(2)}`,\r\n  ]);\r\n\r\n  doc.autoTable({\r\n    head: [transaccionesHeaders],\r\n    body: transaccionesRows,\r\n    startY: nextTableY + 10,\r\n  });\r\n\r\n  // Guardar el PDF\r\n  doc.save(\"reporte_portafolio_completo.pdf\");\r\n};\r\n\r\nexport default generatePortfolioReport;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,iBAAiB;AAExB,MAAMC,uBAAuB,GAAGA,CAACC,QAAQ,EAAEC,aAAa,KAAK;EAC3D,MAAMC,GAAG,GAAG,IAAIJ,KAAK,CAAC,CAAC;;EAEvB;EACAI,GAAG,CAACC,WAAW,CAAC,EAAE,CAAC;EACnBD,GAAG,CAACE,IAAI,CAAC,sCAAsC,EAAE,GAAG,EAAE,EAAE,EAAE;IAAEC,KAAK,EAAE;EAAS,CAAC,CAAC;;EAE9E;EACA,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAAC,CAAC;EACvBL,GAAG,CAACC,WAAW,CAAC,EAAE,CAAC;EACnBD,GAAG,CAACE,IAAI,CAAC,UAAUE,IAAI,CAACE,kBAAkB,CAAC,CAAC,IAAIF,IAAI,CAACG,kBAAkB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;;EAEpF;EACAP,GAAG,CAACC,WAAW,CAAC,EAAE,CAAC;EACnBD,GAAG,CAACE,IAAI,CAAC,qBAAqB,EAAE,EAAE,EAAE,EAAE,CAAC;EAEvC,MAAMM,cAAc,GAAG,CACrB,kBAAkB,EAClB,UAAU,EACV,WAAW,EACX,eAAe,EACf,kBAAkB,CACnB;EAED,MAAMC,WAAW,GAAGX,QAAQ,CAACY,GAAG,CAAEC,MAAM,IAAK;IAC3C,MAAMC,MAAM,GAAGD,MAAM,CAACC,MAAM,IAAI,aAAa;IAC7C,MAAMC,QAAQ,GAAGC,MAAM,CAACH,MAAM,CAACI,cAAc,CAAC,IAAI,CAAC;IACnD,MAAMC,QAAQ,GAAGF,MAAM,CAACH,MAAM,CAACK,QAAQ,CAAC,IAAI,CAAC;IAC7C,MAAMC,YAAY,GAAGH,MAAM,CAACH,MAAM,CAACO,KAAK,CAAC,IAAI,CAAC;IAC9C,MAAMC,eAAe,GAAIF,YAAY,GAAGJ,QAAQ,GAAIG,QAAQ;IAE5D,OAAO,CACLJ,MAAM,EACNC,QAAQ,EACR,IAAIG,QAAQ,CAACI,OAAO,CAAC,CAAC,CAAC,EAAE,EACzB,IAAIH,YAAY,CAACG,OAAO,CAAC,CAAC,CAAC,EAAE,EAC7B,IAAID,eAAe,CAACC,OAAO,CAAC,CAAC,CAAC,EAAE,CACjC;EACH,CAAC,CAAC;EAEFpB,GAAG,CAACqB,SAAS,CAAC;IACZC,IAAI,EAAE,CAACd,cAAc,CAAC;IACtBe,IAAI,EAAEd,WAAW;IACjBe,MAAM,EAAE;EACV,CAAC,CAAC;;EAEF;EACA,MAAMC,UAAU,GAAGzB,GAAG,CAAC0B,iBAAiB,CAACC,MAAM,GAAG,EAAE;EACpD3B,GAAG,CAACC,WAAW,CAAC,EAAE,CAAC;EACnBD,GAAG,CAACE,IAAI,CAAC,2BAA2B,EAAE,EAAE,EAAEuB,UAAU,CAAC;EAErD,MAAMG,oBAAoB,GAAG,CAC3B,iBAAiB,EACjB,kBAAkB,EAClB,eAAe,EACf,mBAAmB,EACnB,YAAY,CACb;EAED,MAAMC,iBAAiB,GAAG9B,aAAa,CAACW,GAAG,CAAEoB,WAAW,IAAK,CAC3DA,WAAW,CAACC,WAAW,IAAI,mBAAmB,EAC9CD,WAAW,CAAClB,MAAM,IAAI,aAAa,EACnC,IAAI,CAACE,MAAM,CAACgB,WAAW,CAACE,YAAY,CAAC,IAAI,CAAC,EAAEZ,OAAO,CAAC,CAAC,CAAC,EAAE,EACxDN,MAAM,CAACgB,WAAW,CAACG,gBAAgB,CAAC,IAAI,CAAC,EACzC,IAAI,CAACnB,MAAM,CAACgB,WAAW,CAACI,SAAS,CAAC,IAAI,CAAC,EAAEd,OAAO,CAAC,CAAC,CAAC,EAAE,CACtD,CAAC;EAEFpB,GAAG,CAACqB,SAAS,CAAC;IACZC,IAAI,EAAE,CAACM,oBAAoB,CAAC;IAC5BL,IAAI,EAAEM,iBAAiB;IACvBL,MAAM,EAAEC,UAAU,GAAG;EACvB,CAAC,CAAC;;EAEF;EACAzB,GAAG,CAACmC,IAAI,CAAC,iCAAiC,CAAC;AAC7C,CAAC;AAED,eAAetC,uBAAuB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}